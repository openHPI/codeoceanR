% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rt_gives.R
\name{rt_gives}
\alias{rt_gives}
\title{Does code produce a wanted echo (\link{message} + \link{cat} + \link{print}), warning or error?}
\usage{
rt_gives(
  type,
  expr,
  msg = "",
  expr2 = NULL,
  value = FALSE,
  capt = FALSE,
  exact = FALSE,
  fixed = TRUE,
  name = deparse(substitute(expr))
)
}
\arguments{
\item{type}{Charstring, one of "echo", "warning", "error".}

\item{expr}{Code to be executed while side-output is collected.
Can be contained within \{curly brackets\}.}

\item{msg}{Desired echo/warning/error message.
DEFAULT: \code{""} (test if no message is generated).}

\item{expr2}{If given, msg will be determined from running this code. DEFAULT: NULL}

\item{value}{Return the result of running \code{expr}? DEFAULT: FALSE}

\item{capt}{Return the captured echo/warnings/error of running \code{expr}
(instead of testing them)? DEFAULT: FALSE}

\item{exact}{use \link{==} instead of \link{grepl}? Useful e.g. for type="echo" to see if
message is used, not print. DEFAULT: FALSE}

\item{fixed}{Treat \code{msg} as is, rather than regex? (only if exact=FALSE) DEFAULT: TRUE}

\item{name}{Charstring to be included in testing messages. DEFAULT: input code}
}
\value{
TRUE / FALSE by default, the result of running the code if \code{value=TRUE},
the captured messages themselves if \code{msg=TRUE}.
}
\description{
Does code produce a wanted echo (\link{message} + \link{cat} + \link{print}), warning or error?
}
\examples{
rt_test_env <- new.env()
# captured messages:
rt_gives("echo", {77; 88; 99}, value=TRUE)           # 99
rt_gives("echo", cat("line\nwith break"), capt=TRUE) # "line\\nwith break"
rt_gives("echo", message("some message"), capt=TRUE) # "some message"
rt_gives("echo", {77; 88; 99}, capt=TRUE)            # ""
rt_gives("echo", {77; print(88); 99}, capt=TRUE)     # "[1] 88"
rt_gives("echo", {log(-77); print(99)}, capt=TRUE)   # warning not in echo
rt_gives("echo", {print(99) ; log("6")}, capt=TRUE)  # error is included
rt_gives("warning",{log(-4);log("6");log(-3)},capt=TRUE) # error is ignored
rt_gives("warning", log(-3), capt=TRUE)              # "log(-3): NaNs produced"
rt_gives("error", log("3"), capt=TRUE)               # "Error in log(\"3\") : non-numeric [...]

# Testing messages:
rt_gives("echo", {print(77); cat("aa bb")}, "aa b") # TRUE
rt_gives("echo", cat("aa bb"), "aa b", exact=TRUE)  # wrong echo
rt_gives("echo", {print(77); cat("stuff")}, "thing")# wrong echo
rt_gives("echo", log(7), "")                        # TRUE
rt_gives("echo", cat(88), "")                       # shouldn't echo but gives '88'
rt_gives("echo", log(7), "stuff")                   # should echo something
rt_gives("warning", log(-7), "NaNs produced")       # TRUE
rt_gives("warning", log( 7), "NaNs produced")       # should warn
rt_gives("warning", log(-7), "")                    # shouldn't warn, but gives ...
rt_gives("warning", log(7), "")                     # TRUE

rt_gives("error", log(777), "")                     # TRUE
rt_gives("error", log("7"), "")                     # Shouldn't fails but raises ...
rt_gives("error", log("7"), "non-numeric argument") # TRUE
rt_gives("error", log(777), "non-numeric argument") # should raise error

try(rt_gives("dummy", log("7"), "") ) # error: method 'dummy' is not implemented.

# convenience testing:
rt_gives("error", log(7),   expr2=log("7"))         # should raise error
rt_gives("echo",  cat(7),   expr2=cat(8))           # should echo '8', not '7'
rt_gives("error", log("7"), expr2=log(7))           # should not fail, but raises ...
rt_gives("error", log(7),   expr2=log(7))           # TRUE
rt_gives("error", log("7"), expr2=log("7"))         # TRUE

}
\seealso{
\link{capture.output}, \link{try}, \url{https://stackoverflow.com/a/4947528/1587132}
}
\author{
Berry Boessenkool, \email{berry-b@gmx.de}, Dec 2020 + Oct 2021
}
